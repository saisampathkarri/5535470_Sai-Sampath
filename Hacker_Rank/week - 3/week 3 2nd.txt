#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int is_prime(int x) {
    if (x < 2) return 0;
    for (int i = 2; i * i <= x; i++)
        if (x % i == 0) return 0;
    return 1;
}

void generate_primes(int *primes, int q) {
    int num = 2, count = 0;
    while (count < q) {
        if (is_prime(num)) primes[count++] = num;
        num++;
    }
}

int main() {
    int n, q;
    scanf("%d %d", &n, &q);
    int *A = malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) scanf("%d", &A[i]);

    int *primes = malloc(q * sizeof(int));
    generate_primes(primes, q);

    int *result = malloc(n * sizeof(int));
    int res_count = 0;

    for (int i = 0; i < q; i++) {
        int *B = malloc(n * sizeof(int));
        int *next_A = malloc(n * sizeof(int));
        int b_top = 0, a_top = 0;
        for (int j = n - 1; j >= 0; j--) {
            if (A[j] % primes[i] == 0) B[b_top++] = A[j];
            else next_A[a_top++] = A[j];
        }
        for (int j = b_top - 1; j >= 0; j--) result[res_count++] = B[j];
        free(A);
        A = next_A;
        n = a_top;
        free(B);
    }
    for (int j = n - 1; j >= 0; j--) result[res_count++] = A[j];

    for (int i = 0; i < res_count; i++) printf("%d\n", result[i]);

    free(A);
    free(primes);
    free(result);
    return 0;
}