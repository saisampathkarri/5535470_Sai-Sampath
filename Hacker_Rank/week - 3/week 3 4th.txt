#include <stdio.h>
#define MAX 100000

int stack1[MAX], top1 = -1;
int stack2[MAX], top2 = -1;

void push1(int x) { stack1[++top1] = x; }
void push2(int x) { stack2[++top2] = x; }
int pop1() { return stack1[top1--]; }
int pop2() { return stack2[top2--]; }
int peek2() { return stack2[top2]; }

void enqueue(int x) { push1(x); }

void shiftStacks() {
    if (top2 == -1)
        while (top1 != -1)
            push2(pop1());
}

void dequeue() {
    shiftStacks();
    pop2();
}

void printFront() {
    shiftStacks();
    printf("%d\n", peek2());
}

int main() {
    int q, type, x;
    scanf("%d", &q);
    while (q--) {
        scanf("%d", &type);
        if (type == 1) {
            scanf("%d", &x);
            enqueue(x);
        } else if (type == 2) {
            dequeue();
        } else if (type == 3) {
            printFront();
        }
    }
    return 0;
}